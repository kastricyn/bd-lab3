-- 1 Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
-- Таблицы: Н_ОЦЕНКИ, Н_ВЕДОМОСТИ.
-- Вывести атрибуты: Н_ОЦЕНКИ.КОД, Н_ВЕДОМОСТИ.ДАТА.
-- Фильтры (AND):
-- a) Н_ОЦЕНКИ.КОД < 5.
-- b) Н_ВЕДОМОСТИ.ДАТА = 2022-06-08.
-- c) Н_ВЕДОМОСТИ.ДАТА < 2022-06-08.
-- Вид соединения: LEFT JOIN.
SELECT Н_ОЦЕНКИ.КОД, Н_ВЕДОМОСТИ.ДАТА
FROM Н_ОЦЕНКИ LEFT JOIN Н_ВЕДОМОСТИ ON Н_ВЕДОМОСТИ.ОЦЕНКА = Н_ОЦЕНКИ.КОД 
WHERE Н_ОЦЕНКИ.КОД < '5' AND Н_ВЕДОМОСТИ.ДАТА = '2022-06-08' AND Н_ВЕДОМОСТИ.ДАТА < '2022-06-08';


-- 2 Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
-- Таблицы: Н_ЛЮДИ, Н_ВЕДОМОСТИ, Н_СЕССИЯ.
-- Вывести атрибуты: Н_ЛЮДИ.ИМЯ, Н_ВЕДОМОСТИ.ЧЛВК_ИД, Н_СЕССИЯ.УЧГОД.
-- Фильтры (AND):
-- a) Н_ЛЮДИ.ОТЧЕСТВО < Владимирович.
-- b) Н_ВЕДОМОСТИ.ИД = 1250981.
-- Вид соединения: RIGHT JOIN.

SELECT Н_ЛЮДИ.ИМЯ, Н_ВЕДОМОСТИ.ЧЛВК_ИД, Н_СЕССИЯ.УЧГОД
FROM Н_СЕССИЯ RIGHT JOIN Н_ЛЮДИ ON Н_ЛЮДИ.ИД = Н_СЕССИЯ.ЧЛВК_ИД RIGHT JOIN Н_ВЕДОМОСТИ ON Н_ЛЮДИ.ИД = Н_ВЕДОМОСТИ.ЧЛВК_ИД 
WHERE Н_ЛЮДИ.ОТЧЕСТВО < 'Владимирович' AND Н_ВЕДОМОСТИ.ИД = 1250981;

-- 3 Составить запрос, который ответит на вопрос, есть ли среди студентов группы 3102 те, кто младше 20 лет.

SELECT date_trunc('year', INTERVAL '20') > ANY (
    SELECT age(Н_ЛЮДИ.ДАТА_РОЖДЕНИЯ)
    FROM Н_УЧЕНИКИ JOIN Н_ЛЮДИ ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
    WHERE Н_УЧЕНИКИ.ГРУППА = '3102'
);

-- 4 В таблице Н_ГРУППЫ_ПЛАНОВ найти номера планов, по которым обучается (обучалось) более 2 групп на заочной форме обучения.
-- Для реализации использовать соединение таблиц.
SELECT Н_ГРУППЫ_ПЛАНОВ.ПЛАН_ИД, count(Н_ГРУППЫ_ПЛАНОВ.ГРУППА)
FROM Н_ГРУППЫ_ПЛАНОВ JOIN Н_ПЛАНЫ ON Н_ПЛАНЫ.ИД = Н_ГРУППЫ_ПЛАНОВ.ПЛАН_ИД JOIN Н_ФОРМЫ_ОБУЧЕНИЯ ON Н_ПЛАНЫ.ФО_ИД = Н_ФОРМЫ_ОБУЧЕНИЯ.ИД
WHERE Н_ФОРМЫ_ОБУЧЕНИЯ.НАИМЕНОВАНИЕ = 'Очная'
GROUP BY Н_ГРУППЫ_ПЛАНОВ.ПЛАН_ИД
HAVING count(Н_ГРУППЫ_ПЛАНОВ.ГРУППА) > 2;

-- 5 Выведите таблицу со средним возрастом студентов во всех группах (Группа, Средний возраст), где средний возраст больше среднего возраста в группе 1101.

SELECT Н_УЧЕНИКИ.ГРУППА, avg(age(Н_ЛЮДИ.ДАТА_РОЖДЕНИЯ)) AS "Средний возраст"
FROM Н_УЧЕНИКИ JOIN Н_ЛЮДИ ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
GROUP BY Н_УЧЕНИКИ.ГРУППА
HAVING avg(age(Н_ЛЮДИ.ДАТА_РОЖДЕНИЯ)) > (
    SELECT avg(age(Н_ЛЮДИ.ДАТА_РОЖДЕНИЯ))
    FROM Н_УЧЕНИКИ JOIN Н_ЛЮДИ ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
    WHERE Н_УЧЕНИКИ.ГРУППА = '1101'
);


-- 6 Получить список студентов, зачисленных ровно первого сентября 2012 года на первый курс очной или заочной формы обучения. В результат включить:
-- номер группы;
-- номер, фамилию, имя и отчество студента;
-- номер и состояние пункта приказа;
-- Для реализации использовать подзапрос с EXISTS.

SELECT Н_УЧЕНИКИ.ГРУППА, 
Н_УЧЕНИКИ.ИД, ФАМИЛИЯ, ИМЯ, ОТЧЕСТВО, 
Н_УЧЕНИКИ.П_ПРКОК_ИД, Н_УЧЕНИКИ.СОСТОЯНИЕ
FROM Н_УЧЕНИКИ JOIN Н_ЛЮДИ ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД 
WHERE Н_УЧЕНИКИ.НАЧАЛО = date('2003-09-01') AND 
EXISTS (
    SELECT 1
    FROM Н_ГРУППЫ_ПЛАНОВ JOIN Н_ПЛАНЫ ON Н_ПЛАНЫ.ИД = Н_ГРУППЫ_ПЛАНОВ.ПЛАН_ИД JOIN Н_ФОРМЫ_ОБУЧЕНИЯ ON Н_ПЛАНЫ.ФО_ИД = Н_ФОРМЫ_ОБУЧЕНИЯ.ИД 
    WHERE Н_ФОРМЫ_ОБУЧЕНИЯ.НАИМЕНОВАНИЕ IN ('Очная', 'Заочная') AND Н_ПЛАНЫ.КУРС = 1
);

-- 7 Вывести список студентов, имеющих одинаковые отчества, но не совпадающие ид.

SELECT Н_ЛЮДИ.*
FROM Н_ЛЮДИ
WHERE Н_ЛЮДИ.ОТЧЕСТВО IN (
    SELECT Н_ЛЮДИ.ОТЧЕСТВО
    FROM (
        SELECT DISTINCT ON (Н_ЛЮДИ.ИД) Н_ЛЮДИ.ОТЧЕСТВО
        FROM Н_УЧЕНИКИ JOIN Н_ЛЮДИ ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
    ) AS Н_ЛЮДИ
    GROUP BY Н_ЛЮДИ.ОТЧЕСТВО
    HAVING count(1) > 1
) AND Н_ЛЮДИ.ИД IN (
    SELECT DISTINCT Н_УЧЕНИКИ.ЧЛВК_ИД FROM Н_УЧЕНИКИ
)
ORDER BY Н_ЛЮДИ.ИД;